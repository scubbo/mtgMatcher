apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile project(path: ':app', configuration: 'jarConfiguration')
    testCompile 'org.json:json:20090211' //TODO: but this is a dependency of :app as well!? >:(
}


test.doFirst {
    ext.process = null
    File projectDir = file(new File("${project(':server').projectDir}")) //TODO: Define as variable
    def setupProc = "./install.py --databaseFile gradleTesting.db --databaseOnly".execute(null, //TODO: Can we define "gradleTesting" as a variable?
        projectDir)
    setupProc.waitFor()
    def proc = "./startServer.py --port 2021 --databaseFile gradleTesting.db".execute(null,
            projectDir)
    sleep(1000)
    try {
        proc.exitValue()
        throw new Exception("THERE WAS AN ERROR, SERVER DIDN'T START UP")
    } catch (IllegalThreadStateException e) {
        println "Server started on port 2021" //TODO: Make this configurable
        ext.process = proc
    }
}

task tearDownServer << {
    if (test.hasProperty('process')) {
        test.process.destroy()
        println "Test server successfully shut down"
    }
    def databaseFileDeletionProc = "rm gradleTesting.db".execute(null,
        file(new File("${project(':server').projectDir}")))
    databaseFileDeletionProc.waitFor()
    println "Testing database deleted"
}

test.finalizedBy(tearDownServer)

test {
    testLogging.showStandardStreams = true
}